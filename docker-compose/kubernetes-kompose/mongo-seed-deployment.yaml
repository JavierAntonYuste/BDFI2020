apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f ../docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo-seed
  name: mongo-seed
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo-seed
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f ../docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/mynet: "true"
        io.kompose.service: mongo-seed
    spec:
      containers:
      - args:
        - mongoimport
        - --host
        - mongo
        - --port
        - "27017"
        - -d
        - agile_data_science
        - -c
        - origin_dest_distances
        - --mode
        - upsert
        - --file
        - /practica_big_data_2019/data/origin_dest_distances.jsonl
        env:
        - name: MONGO_HOST
          value: mongo
        - name: MONGO_PORT
          value: "27017"
        image: fvilers/mongo-seed:latest
        imagePullPolicy: ""
        name: mongo-seed
        resources: {}
        volumeMounts:
        - mountPath: /practica_big_data_2019
          name: mongo-seed-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: mongo-seed-claim0
        persistentVolumeClaim:
          claimName: mongo-seed-claim0
status: {}
